/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by main. DO NOT EDIT.

package v1beta1

import (
	"github.com/rancher/lasso/pkg/controller"
	"github.com/rancher/wrangler/pkg/schemes"
	"k8s.io/apimachinery/pkg/runtime/schema"
	v1beta1 "kubevirt.io/containerized-data-importer-api/pkg/apis/core/v1beta1"
)

func init() {
	schemes.Register(v1beta1.AddToScheme)
}

type Interface interface {
	CDI() CDIController
	CDIConfig() CDIConfigController
	CDIConfigList() CDIConfigListController
	CDIList() CDIListController
	DataImportCron() DataImportCronController
	DataImportCronList() DataImportCronListController
	DataSource() DataSourceController
	DataSourceList() DataSourceListController
	DataVolume() DataVolumeController
	DataVolumeList() DataVolumeListController
	ObjectTransfer() ObjectTransferController
	ObjectTransferList() ObjectTransferListController
	StorageProfile() StorageProfileController
	StorageProfileList() StorageProfileListController
}

func New(controllerFactory controller.SharedControllerFactory) Interface {
	return &version{
		controllerFactory: controllerFactory,
	}
}

type version struct {
	controllerFactory controller.SharedControllerFactory
}

func (c *version) CDI() CDIController {
	return NewCDIController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "CDI"}, "cdis", false, c.controllerFactory)
}
func (c *version) CDIConfig() CDIConfigController {
	return NewCDIConfigController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "CDIConfig"}, "cdiconfigs", false, c.controllerFactory)
}
func (c *version) CDIConfigList() CDIConfigListController {
	return NewCDIConfigListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "CDIConfigList"}, "cdiconfiglists", true, c.controllerFactory)
}
func (c *version) CDIList() CDIListController {
	return NewCDIListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "CDIList"}, "cdilists", true, c.controllerFactory)
}
func (c *version) DataImportCron() DataImportCronController {
	return NewDataImportCronController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "DataImportCron"}, "dataimportcrons", true, c.controllerFactory)
}
func (c *version) DataImportCronList() DataImportCronListController {
	return NewDataImportCronListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "DataImportCronList"}, "dataimportcronlists", true, c.controllerFactory)
}
func (c *version) DataSource() DataSourceController {
	return NewDataSourceController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "DataSource"}, "datasources", true, c.controllerFactory)
}
func (c *version) DataSourceList() DataSourceListController {
	return NewDataSourceListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "DataSourceList"}, "datasourcelists", true, c.controllerFactory)
}
func (c *version) DataVolume() DataVolumeController {
	return NewDataVolumeController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "DataVolume"}, "datavolumes", true, c.controllerFactory)
}
func (c *version) DataVolumeList() DataVolumeListController {
	return NewDataVolumeListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "DataVolumeList"}, "datavolumelists", true, c.controllerFactory)
}
func (c *version) ObjectTransfer() ObjectTransferController {
	return NewObjectTransferController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "ObjectTransfer"}, "objecttransfers", false, c.controllerFactory)
}
func (c *version) ObjectTransferList() ObjectTransferListController {
	return NewObjectTransferListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "ObjectTransferList"}, "objecttransferlists", true, c.controllerFactory)
}
func (c *version) StorageProfile() StorageProfileController {
	return NewStorageProfileController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "StorageProfile"}, "storageprofiles", false, c.controllerFactory)
}
func (c *version) StorageProfileList() StorageProfileListController {
	return NewStorageProfileListController(schema.GroupVersionKind{Group: "cdi.kubevirt.io", Version: "v1beta1", Kind: "StorageProfileList"}, "storageprofilelists", true, c.controllerFactory)
}
